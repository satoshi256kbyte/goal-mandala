# 本番環境用Docker Compose設定
# 使用方法: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

version: "3.8"

services:
  postgres:
    # 本番環境用の設定オーバーライド
    environment:
      # 本番環境用の厳格な設定
      POSTGRES_LOG_STATEMENT: none
      POSTGRES_LOG_DURATION: "off"
    # 本番環境用リソース制限（より厳格）
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "1.0"
        reservations:
          memory: 512M
          cpus: "0.5"
      # 本番環境用レプリケーション設定
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    # 本番環境用セキュリティ強化
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    # 本番環境用ログ設定
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        compress: "true"
    # 本番環境用ヘルスチェック（より頻繁）
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U goal_mandala_user -d goal_mandala_dev"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 60s

  cognito-local:
    # 注意: cognito-localは開発・テスト環境専用
    # 本番環境では実際のAmazon Cognitoを使用してください
    environment:
      NODE_ENV: production
      DEBUG: ""
    # 本番環境用リソース制限
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    # 本番環境用セキュリティ強化
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    # 本番環境用ログ設定
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        compress: "true"
    # 本番環境用ヘルスチェック
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9229/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 60s

# 本番環境用ネットワーク設定
networks:
  goal-mandala-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: goal-mandala-br0
    ipam:
      config:
        - subnet: 172.20.0.0/16
