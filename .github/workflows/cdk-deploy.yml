name: CDK Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - stg
          - prod
      confirm_deployment:
        description: 'Confirm deployment (type "deploy" to proceed)'
        required: true
        type: string

jobs:
  validate-input:
    runs-on: ubuntu-latest
    steps:
      - name: Validate deployment confirmation
        if: ${{ github.event.inputs.confirm_deployment != 'deploy' }}
        run: |
          echo "‚ùå Deployment confirmation failed. Please type 'deploy' to proceed."
          exit 1

  deploy:
    needs: validate-input
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".tool-versions"
          cache: "pnpm"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION || 'ap-northeast-1' }}

      - name: Build infrastructure package
        run: pnpm --filter infrastructure build

      - name: Run CDK diff
        working-directory: packages/infrastructure
        run: |
          echo "üîç Showing CDK diff for environment: ${{ github.event.inputs.environment }}"
          pnpm cdk diff --context environment=${{ github.event.inputs.environment }}

      - name: Deploy CDK stacks
        working-directory: packages/infrastructure
        run: |
          echo "üöÄ Deploying to environment: ${{ github.event.inputs.environment }}"
          pnpm cdk deploy --all --require-approval never --context environment=${{ github.event.inputs.environment }}

      - name: Output deployment info
        run: |
          echo "‚úÖ Deployment completed successfully!"
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Deployed at: $(date)"
