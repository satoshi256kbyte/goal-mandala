# ===========================================
# 目標管理曼荼羅 - 環境変数設定例
# ===========================================
# このファイルをコピーして .env ファイルを作成してください
# cp .env.example .env

# ===========================================
# データベース設定
# ===========================================
# PostgreSQL接続URL（開発環境用）
DATABASE_URL=postgresql://goal_mandala_user:your_secure_password_here@localhost:5432/goal_mandala_dev

# PostgreSQLパスワード（Docker Compose用）
POSTGRES_PASSWORD=your_secure_password_here

# テスト用データベースURL
TEST_DATABASE_URL=postgresql://goal_mandala_user:your_secure_password_here@localhost:5432/goal_mandala_test

# ===========================================
# Cognito設定（ローカル開発用）
# ===========================================
# cognito-localエンドポイント
COGNITO_LOCAL_ENDPOINT=http://localhost:9229

# ローカル開発用User Pool ID
COGNITO_USER_POOL_ID=local_user_pool_id

# ローカル開発用Client ID
COGNITO_CLIENT_ID=local_client_id

# AWS リージョン
COGNITO_REGION=ap-northeast-1

# ===========================================
# アプリケーション設定
# ===========================================
# 実行環境（development/test/production）
NODE_ENV=development

# バックエンドAPIポート（通常の開発サーバー用）
PORT=3001

# フロントエンドURL（Vite開発サーバー）
FRONTEND_URL=http://localhost:5173

# バックエンドAPIのベースURL（SAM Local使用時）
API_BASE_URL=http://localhost:3001

# ===========================================
# AWS設定（ローカル開発用）
# ===========================================
# AWSリージョン
AWS_REGION=ap-northeast-1

# ローカル開発用AWS認証情報（ダミー値）
AWS_ACCESS_KEY_ID=local
AWS_SECRET_ACCESS_KEY=local

# ===========================================
# AWS SAM CLI設定
# ===========================================
# SAM Local APIポート
SAM_LOCAL_PORT=3001

# SAM Local APIホスト
SAM_LOCAL_HOST=0.0.0.0

# SAM テンプレートファイルパス
SAM_TEMPLATE_PATH=packages/backend/template.yaml

# SAM 設定ファイルパス
SAM_CONFIG_PATH=packages/backend/samconfig.toml

# SAM ビルド出力ディレクトリ
SAM_BUILD_DIR=packages/backend/.aws-sam

# Lambda関数の環境変数（SAM Local用）
LAMBDA_DATABASE_URL=postgresql://goal_mandala_user:your_secure_password_here@host.docker.internal:5432/goal_mandala_dev
LAMBDA_JWT_SECRET=your_jwt_secret_key_here_change_in_production
LAMBDA_FRONTEND_URL=http://localhost:5173
LAMBDA_AWS_REGION=ap-northeast-1
LAMBDA_NODE_ENV=development
LAMBDA_LOG_LEVEL=info

# SAM Local用のパラメータオーバーライド
SAM_PARAMETER_OVERRIDES=DatabaseUrl=postgresql://goal_mandala_user:your_secure_password_here@host.docker.internal:5432/goal_mandala_dev JwtSecret=your_jwt_secret_key_here_change_in_production FrontendUrl=http://localhost:5173

# ===========================================
# セキュリティ設定
# ===========================================
# JWT秘密鍵（本番環境では強固な値に変更してください）
JWT_SECRET=your_jwt_secret_key_here_change_in_production

# セッション秘密鍵
SESSION_SECRET=your_session_secret_key_here

# ===========================================
# メール設定（将来の実装用）
# ===========================================
# SES設定（本番環境用）
# SES_REGION=ap-northeast-1
# SES_FROM_EMAIL=noreply@yourdomain.com

# SMTP設定（開発環境用）
# SMTP_HOST=localhost
# SMTP_PORT=1025
# SMTP_USER=
# SMTP_PASS=

# ===========================================
# ログ設定
# ===========================================
# ログレベル（error/warn/info/debug）
LOG_LEVEL=info

# ログ出力先（console/file）
LOG_OUTPUT=console

# ===========================================
# Docker Compose設定
# ===========================================
# PostgreSQLコンテナ名
POSTGRES_CONTAINER_NAME=goal-mandala-postgres

# cognito-localコンテナ名
COGNITO_CONTAINER_NAME=goal-mandala-cognito

# Dockerネットワーク名
DOCKER_NETWORK_NAME=goal-mandala-network

# ===========================================
# 開発ツール設定
# ===========================================
# Prismaデータベース接続URL（開発用）
PRISMA_DATABASE_URL=postgresql://goal_mandala_user:your_secure_password_here@localhost:5432/goal_mandala_dev

# テスト実行時のデータベースURL
PRISMA_TEST_DATABASE_URL=postgresql://goal_mandala_user:your_secure_password_here@localhost:5432/goal_mandala_test

# ===========================================
# パフォーマンス設定
# ===========================================
# データベース接続プール設定
DB_CONNECTION_LIMIT=10
DB_CONNECTION_TIMEOUT=30000

# API レスポンスタイムアウト（ミリ秒）
API_TIMEOUT=30000

# ===========================================
# AI設定（Amazon Bedrock）
# ===========================================
# Bedrock リージョン
BEDROCK_REGION=ap-northeast-1

# Bedrock モデルID（Nova Micro）
BEDROCK_MODEL_ID=amazon.nova-micro-v1:0

# AI生成タイムアウト（秒）
AI_GENERATION_TIMEOUT=300

# AI生成リトライ回数
AI_GENERATION_RETRY_COUNT=3

# ===========================================
# 機能フラグ
# ===========================================
# AI機能の有効/無効（true/false）
ENABLE_AI_FEATURES=true

# メール送信機能の有効/無効（true/false）
ENABLE_EMAIL_FEATURES=false

# デバッグモードの有効/無効（true/false）
DEBUG_MODE=true
