# JWT認証ミドルウェア 環境変数設定例

# ===========================================
# 基本設定（必須）
# ===========================================

# 実行環境
NODE_ENV=development

# AWS設定
AWS_REGION=ap-northeast-1

# Cognito設定
COGNITO_USER_POOL_ID=ap-northeast-1_xxxxxxxxx
COGNITO_CLIENT_ID=xxxxxxxxxxxxxxxxxxxxxxxxxx

# データベース設定
DATABASE_URL=postgresql://username:password@localhost:5432/database_name

# JWT設定
JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long

# ===========================================
# 認証設定（オプション）
# ===========================================

# モック認証の有効化（開発環境: true, 本番環境: false）
ENABLE_MOCK_AUTH=false

# JWTキャッシュのTTL（秒）
JWT_CACHE_TTL=3600

# ===========================================
# モック認証設定（開発環境用）
# ===========================================

# モックユーザーID
MOCK_USER_ID=dev-user-001

# モックユーザーメールアドレス
MOCK_USER_EMAIL=developer@example.com

# モックユーザー名
MOCK_USER_NAME=Development User

# ===========================================
# ログ設定
# ===========================================

# ログレベル（DEBUG, INFO, WARN, ERROR）
LOG_LEVEL=INFO

# セキュリティ監査ログの有効化
ENABLE_SECURITY_AUDIT=true

# ===========================================
# フロントエンド設定
# ===========================================

# フロントエンドURL
FRONTEND_URL=http://localhost:5173

# ===========================================
# 高度な設定（オプション）
# ===========================================

# 許可するトークン種別（access,id をカンマ区切り）
# ALLOWED_TOKEN_USE=access,id

# 時刻ずれ許容時間（秒）
# CLOCK_TOLERANCE=300

# メール認証必須フラグ
# REQUIRE_EMAIL_VERIFICATION=false

# 許可するCognitoグループ（カンマ区切り）
# ALLOWED_GROUPS=users,premium,admin

# セキュリティ監査の詳細レベル
# SECURITY_AUDIT_LEVEL=standard

# キャッシュの最大サイズ
# MAX_CACHE_SIZE=1000

# リクエストタイムアウト（ミリ秒）
# REQUEST_TIMEOUT=10000

# リトライ回数
# MAX_RETRIES=3

# ===========================================
# AWS Secrets Manager設定（本番環境推奨）
# ===========================================

# JWT秘密鍵のSecrets Manager ARN
# JWT_SECRET_ARN=arn:aws:secretsmanager:ap-northeast-1:123456789012:secret:jwt-secret-abc123

# データベース認証情報のSecrets Manager ARN
# DATABASE_SECRET_ARN=arn:aws:secretsmanager:ap-northeast-1:123456789012:secret:database-credentials-def456

# Cognito設定のSecrets Manager ARN
# COGNITO_SECRET_ARN=arn:aws:secretsmanager:ap-northeast-1:123456789012:secret:cognito-config-ghi789

# ===========================================
# 監視・メトリクス設定
# ===========================================

# メトリクス収集の有効化
# ENABLE_METRICS=true

# パフォーマンス監視の有効化
# ENABLE_PERFORMANCE_MONITORING=true

# アラート設定
# ENABLE_ALERTS=true

# Slack Webhook URL（アラート通知用）
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/xxx/yyy/zzz

# ===========================================
# 開発・デバッグ設定
# ===========================================

# デバッグモードの有効化
# DEBUG_MODE=false

# 詳細なエラーログの有効化
# VERBOSE_ERROR_LOGGING=false

# リクエスト・レスポンスログの有効化
# LOG_REQUESTS=false

# パフォーマンス測定の有効化
# MEASURE_PERFORMANCE=false

# ===========================================
# セキュリティ設定
# ===========================================

# CORS設定
# CORS_ORIGIN=http://localhost:5173

# CSRFトークンの有効化
# ENABLE_CSRF_PROTECTION=false

# レート制限の有効化
# ENABLE_RATE_LIMITING=false

# 最大リクエスト数（分あたり）
# MAX_REQUESTS_PER_MINUTE=100

# IPホワイトリストの有効化
# ENABLE_IP_WHITELIST=false

# 許可するIPアドレス（カンマ区切り）
# ALLOWED_IPS=127.0.0.1,::1

# ===========================================
# 注意事項
# ===========================================

# 1. 本番環境では必ず強力なJWT_SECRETを設定してください
# 2. ENABLE_MOCK_AUTHは本番環境では必ずfalseに設定してください
# 3. 機密情報はAWS Secrets Managerの使用を推奨します
# 4. ログレベルは本番環境ではWARN以上に設定することを推奨します
# 5. セキュリティ監査ログは本番環境では必ず有効にしてください
